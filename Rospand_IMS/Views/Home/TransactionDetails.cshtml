@using Rospand_IMS.Pagination
@model PaginatedList<InventoryTransaction>


@{
    ViewData["Title"] = "Inventory Transactions";
}

<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h4>@ViewData["Title"]</h4>
                <a asp-action="Index" class="btn btn-secondary">Back to Dashboard</a>
            </div>
        </div>
        
        <div class="card-body">
            <!-- Filter Form -->
            <form method="get" class="mb-4">
                <div class="row">
                    <div class="col-md-3">
                        <label class="form-label">Transaction Type</label>
                        <select name="transactionType" class="form-select" asp-items="Html.GetEnumSelectList<InventoryTransactionType>()">
                            <option value="">All Types</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Product</label>
                        <select name="productId" class="form-select" asp-items="ViewBag.Products">
                            <option value="">All Products</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Warehouse</label>
                        <select name="warehouseId" class="form-select" asp-items="ViewBag.Warehouses">
                            <option value="">All Warehouses</option>
                        </select>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-md-3">
                        <label class="form-label">From Date</label>
                        <input type="date" name="fromDate" class="form-control" value="@ViewBag.FromDate" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">To Date</label>
                        <input type="date" name="toDate" class="form-control" value="@ViewBag.ToDate" />
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary me-2">Filter</button>
                        <a asp-action="TransactionDetails" class="btn btn-secondary">Reset</a>
                    </div>
                </div>
            </form>

            <!-- Transactions Table -->
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>Date</th>
                            <th>Type</th>
                            <th>Reference</th>
                            <th>Product</th>
                            <th>Warehouse</th>
                            <th class="text-end">Quantity</th>
                            <th class="text-end">Value</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.TransactionDate.ToString("g")</td>
                                <td>
                                    @switch (item.TransactionType)
                                    {
                                        case InventoryTransactionType.Purchase:
                                            <span class="badge bg-primary">Purchase</span>
                                            break;
                                        case InventoryTransactionType.Sale:
                                            <span class="badge bg-success">Sale</span>
                                            break;
                                        case InventoryTransactionType.Adjustment:
                                            <span class="badge bg-warning">Adjustment</span>
                                            break;
                                        case InventoryTransactionType.Damage:
                                            <span class="badge bg-danger">Damage</span>
                                            break;
                                        case InventoryTransactionType.TransferIn:
                                            <span class="badge bg-info">Transfer In</span>
                                            break;
                                        case InventoryTransactionType.TransferOut:
                                            <span class="badge bg-info">Transfer Out</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@item.TransactionType</span>
                                            break;
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.ReferenceNumber))
                                    {
                                        <a asp-action="TransactionDetails" asp-route-referenceNumber="@item.ReferenceNumber">
                                            @item.ReferenceNumber
                                        </a>
                                    }
                                </td>
                                <td>
                                    <a asp-controller="Inventory" asp-action="Details" 
                                       asp-route-productId="@item.ProductId" 
                                       asp-route-warehouseId="@item.WarehouseId">
                                        @item.Product?.Name
                                    </a>
                                </td>
                                <td>@item.Warehouse?.Name</td>
                                <td class="text-end @(item.Quantity > 0 ? "text-success" : "text-danger")">
                                    @(item.Quantity > 0 ? "+" : "")@item.Quantity
                                </td>
                                <td class="text-end">
                                    @{
                                        var value = item.Quantity * (item.TransactionType == InventoryTransactionType.Purchase ? 
                                            item.Product?.PurchasePrice ?? 0 : item.Product?.SalesPrice ?? 0);
                                    }
                                    @value.ToString("C")
                                </td>
                                <td>
                                    <a asp-action="TransactionDetails" asp-route-id="@item.Id" 
                                       class="btn btn-sm btn-info" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item @prevDisabled">
                        <a class="page-link" 
                           asp-action="TransactionDetails"
                           asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-transactionType="@ViewBag.TransactionType"
                           asp-route-fromDate="@ViewBag.FromDate"
                           asp-route-toDate="@ViewBag.ToDate"
                           asp-route-productId="@ViewBag.ProductId"
                           asp-route-warehouseId="@ViewBag.WarehouseId">
                            Previous
                        </a>
                    </li>
                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" 
                               asp-action="TransactionDetails"
                               asp-route-pageNumber="@i"
                               asp-route-transactionType="@ViewBag.TransactionType"
                               asp-route-fromDate="@ViewBag.FromDate"
                               asp-route-toDate="@ViewBag.ToDate"
                               asp-route-productId="@ViewBag.ProductId"
                               asp-route-warehouseId="@ViewBag.WarehouseId">
                                @i
                            </a>
                        </li>
                    }
                    <li class="page-item @nextDisabled">
                        <a class="page-link" 
                           asp-action="TransactionDetails"
                           asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-transactionType="@ViewBag.TransactionType"
                           asp-route-fromDate="@ViewBag.FromDate"
                           asp-route-toDate="@ViewBag.ToDate"
                           asp-route-productId="@ViewBag.ProductId"
                           asp-route-warehouseId="@ViewBag.WarehouseId">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table th {
            white-space: nowrap;
        }
        .badge {
            font-size: 0.9em;
        }
    </style>
}