@using Rospand_IMS.Controllers
@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mt-4"><i class="fas fa-tachometer-alt me-2"></i>Dashboard</h1>
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" id="reportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fas fa-calendar-alt me-2"></i>@Model.Period
            </button>
            <ul class="dropdown-menu" aria-labelledby="reportDropdown">
                @{
                    var now = DateTime.Now;
                    for (int i = 0; i < 6; i++)
                    {
                        var date = now.AddMonths(-i);
                        var month = date.Month;
                        var year = date.Year;
                        <li>
                            <a class="dropdown-item" href="@Url.Action("Index", "Home", new { month = month, year = year })">
                                @date.ToString("MMMM yyyy")
                            </a>
                        </li>
                    }
                }
            </ul>
        </div>

    </div>

    <!-- Summary Cards -->
    <div class="row">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="fw-normal">Total Sales</h6>
                            <h3>@Model.SalesTotal.ToString("C")</h3>
                        </div>
                        <i class="fas fa-dollar-sign fa-2x"></i>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="@Url.Action("Index", "SalesOrder", new { status = SalesOrderStatus.Confirmed })">View Details</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="fw-normal">Purchase Orders</h6>
                            <h3>@Model.PurchaseOrderCount</h3>
                        </div>
                        <i class="fas fa-shopping-cart fa-2x"></i>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="@Url.Action("Index", "PurchaseOrder")">View Details</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="fw-normal">Total Stock</h6>
                            <h3>@Model.TotalStock</h3>
                        </div>
                        <i class="fas fa-boxes fa-2x"></i>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="@Url.Action("Index", "Inventory")">View Details</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-danger text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="fw-normal">Outward Entries</h6>
                            <h3>@Model.OutwardEntryCount</h3>
                        </div>
                        <i class="fas fa-truck fa-2x"></i>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="@Url.Action("Index", "SalesOrder", new { status = SalesOrderStatus.Delivered })">View Details</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
    </div>
     
    <!-- Charts Row -->
    <div class="row">
        <div class="col-xl-8">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-line me-1"></i>
                    Sales & Purchase Trends (Last 6 Months)
                </div>
                <div class="card-body">
                    <canvas id="trendChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-4">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Monthly Summary
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6>Total Purchases</h6>
                        <h4>@Model.PurchaseTotal.ToString("C")</h4>
                    </div>
                    <div class="mb-3">
                        <h6>Total Sales</h6>
                        <h4>@Model.SalesTotal.ToString("C")</h4>
                    </div>
                    <div class="mb-3">
                        <h6>Profit Margin</h6>
                        <h4>@((Model.SalesTotal - Model.PurchaseTotal).ToString("C"))</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Transactions -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <i class="fas fa-table me-1"></i>
                Recent Inventory Movements
            </div>
            <a asp-action="TransactionDetails" class="btn btn-sm btn-outline-primary">
                View All Transactions
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Date</th>
                            <th>Reference</th>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.RecentTransactions)
                        {
                            <tr>
                                <td>
                                    @switch (transaction.TransactionType)
                                    {
                                        case InventoryTransactionType.Purchase:
                                            <span class="badge bg-primary">Purchase</span>
                                            break;
                                        case InventoryTransactionType.Sale:
                                        case InventoryTransactionType.Outward:
                                            <span class="badge bg-success">Sale</span>
                                            break;
                                        case InventoryTransactionType.Adjustment:
                                            <span class="badge bg-warning">Adjustment</span>
                                            break;
                                        case InventoryTransactionType.Damage:
                                            <span class="badge bg-danger">Damage</span>
                                            break;
                                        case InventoryTransactionType.TransferIn:
                                        case InventoryTransactionType.TransferOut:
                                            <span class="badge bg-info">Transfer</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@transaction.TransactionType</span>
                                            break;
                                    }
                                </td>
                                <td>@transaction.TransactionDate.ToString("MMM dd, yyyy")</td>
                                <td>
                                    <a asp-action="TransactionDetails" asp-route-referenceNumber="@transaction.ReferenceNumber">
                                        @transaction.ReferenceNumber
                                    </a>
                                </td>
                                <td>
                                    <a asp-controller="Inventory" asp-action="Details"
                                       asp-route-productId="@transaction.ProductId"
                                       asp-route-warehouseId="@transaction.WarehouseId">
                                        @transaction.ProductName
                                    </a>
                                </td>
                                <td>@transaction.Quantity</td>
                                <td>@transaction.Value.ToString("C")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Trend Chart
        var ctx = document.getElementById('trendChart').getContext('2d');
        var trendChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.TrendLabels)),
                datasets: [
                    {
                        label: 'Purchases ($)',
                        data: @Html.Raw(Json.Serialize(Model.PurchaseTrends)),
                        backgroundColor: 'rgba(13, 110, 253, 0.1)',
                        borderColor: 'rgba(13, 110, 253, 1)',
                        borderWidth: 2,
                        tension: 0.3,
                        fill: true
                    },
                    {
                        label: 'Sales ($)',
                        data: @Html.Raw(Json.Serialize(Model.SalesTrends)),
                        backgroundColor: 'rgba(25, 135, 84, 0.1)',
                        borderColor: 'rgba(25, 135, 84, 1)',
                        borderWidth: 2,
                        tension: 0.3,
                        fill: true
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false,
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}