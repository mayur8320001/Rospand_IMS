@model Rospand_IMS.Controllers.FinancialReportViewModel

@{
    ViewData["Title"] = "Financial Reports";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Financial Reports</h1>
        <div>
            <button class="btn btn-outline-primary me-2">
                <i class="fas fa-download"></i> Export to Excel
            </button>
            <button class="btn btn-outline-secondary">
                <i class="fas fa-print"></i> Print Report
            </button>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Income</h5>
                    <h2 class="card-text">@Model.TotalIncome.ToString("C")</h2>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <h5 class="card-title">Total Expenses</h5>
                    <h2 class="card-text">@Model.TotalExpenses.ToString("C")</h2>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card @(Model.NetProfit >= 0 ? "bg-primary" : "bg-warning") text-white">
                <div class="card-body">
                    <h5 class="card-title">Net Profit/Loss</h5>
                    <h2 class="card-text">@Model.NetProfit.ToString("C")</h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Monthly Financial Chart -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="card-title mb-0">Monthly Financial Performance</h5>
        </div>
        <div class="card-body">
            <canvas id="financialChart" height="100"></canvas>
        </div>
    </div>

    <!-- Detailed Report Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">Monthly Breakdown</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Month</th>
                            <th>Income</th>
                            <th>Expenses</th>
                            <th>Profit/Loss</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var data in Model.MonthlyData)
                        {
                            <tr>
                                <td>@data.Month</td>
                                <td>@data.Income.ToString("C")</td>
                                <td>@data.Expenses.ToString("C")</td>
                                <td>@data.Profit.ToString("C")</td>
                                <td>
                                    @if (data.Profit > 0)
                                    {
                                        <span class="badge bg-success">Profit</span>
                                    }
                                    else if (data.Profit < 0)
                                    {
                                        <span class="badge bg-danger">Loss</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Break-even</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Prepare data for the chart
            const months = [@Html.Raw(string.Join(",", Model.MonthlyData.Select(d => $"\"{d.Month}\"")))];
            const incomeData = [@string.Join(",", Model.MonthlyData.Select(d => d.Income))];
            const expenseData = [@string.Join(",", Model.MonthlyData.Select(d => d.Expenses))];
            
            // Create the chart
            const ctx = document.getElementById('financialChart').getContext('2d');
            const financialChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: months,
                    datasets: [
                        {
                            label: 'Income',
                            data: incomeData,
                            backgroundColor: 'rgba(40, 167, 69, 0.7)',
                            borderColor: 'rgba(40, 167, 69, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'Expenses',
                            data: expenseData,
                            backgroundColor: 'rgba(220, 53, 69, 0.7)',
                            borderColor: 'rgba(220, 53, 69, 1)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return 'â‚¹' + value.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}